{"version":3,"file":"main.js","mappings":"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","sources":["webpack://my-workspace/./apps/crud-info-api/src/app.module.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/auth.controller.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/auth.error.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/auth.module.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/auth.service.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/dtos/index.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/dtos/sign-in.dto.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/dtos/sign-up.dto.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/guards/index.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/guards/jwt.guard.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/index.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/models/auth.enum.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/strategies/index.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/auth/strategies/jwt.strategy.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/prisma/index.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/prisma/prisma.module.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/prisma/prisma.service.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/vehicle/dto/vehicle-create.dto.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/vehicle/service/vehicle.service.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/vehicle/vehicle.controller.ts","webpack://my-workspace/./apps/crud-info-api/src/domain/vehicle/vehicle.module.ts","webpack://my-workspace/./apps/crud-info-api/src/shared/models/unauthenticated-user.dto.ts","webpack://my-workspace/external commonjs \"@nestjs/common\"","webpack://my-workspace/external commonjs \"@nestjs/core\"","webpack://my-workspace/external commonjs \"@nestjs/jwt\"","webpack://my-workspace/external commonjs \"@nestjs/passport\"","webpack://my-workspace/external commonjs \"@nestjs/serve-static\"","webpack://my-workspace/external commonjs \"@nestjs/swagger\"","webpack://my-workspace/external commonjs \"@prisma/client\"","webpack://my-workspace/external commonjs \"@prisma/client/runtime\"","webpack://my-workspace/external commonjs \"argon2\"","webpack://my-workspace/external commonjs \"class-validator\"","webpack://my-workspace/external commonjs \"passport-jwt\"","webpack://my-workspace/external commonjs \"tslib\"","webpack://my-workspace/external node-commonjs \"path\"","webpack://my-workspace/webpack/bootstrap","webpack://my-workspace/./apps/crud-info-api/src/main.ts"],"sourcesContent":["import { Module } from '@nestjs/common';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { AuthModule } from './domain/auth';\nimport { PrismaModule } from './domain/prisma';\nimport { VehicleModule } from './domain/vehicle/vehicle.module';\n@Module({\n  imports: [\n    PrismaModule,\n    VehicleModule,\n    AuthModule,\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'crud-info'),\n    }),\n  ],\n})\nexport class AppModule {}\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport { SignUpResponse, TokenResponse } from '@my-workspace/api-interfaces';\nimport {\n  Body,\n  Controller,\n  HttpCode,\n  HttpException,\n  HttpStatus,\n  Post,\n} from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { PrismaClientKnownRequestError } from '@prisma/client/runtime';\nimport { AuthService } from './auth.service';\nimport { SignInRequestDto } from './dtos/sign-in.dto';\nimport { SignUpRequestDto } from './dtos/sign-up.dto';\nimport { eAuthMessage } from './models/auth.enum';\n\n@ApiTags('Autenticação')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post('sign-up')\n  async signUp(\n    @Body() signUpRequest: SignUpRequestDto\n  ): Promise<TokenResponse & SignUpResponse> {\n    try {\n      const token = await this.authService.signUp(signUpRequest);\n      const user = this.authService.currentUser();\n      return { ...token, ...user };\n    } catch (error) {\n      if (error instanceof PrismaClientKnownRequestError)\n        throw new HttpException(\n          eAuthMessage.EMAIL_ALREADY_EXISTS,\n          HttpStatus.BAD_REQUEST\n        );\n\n      throw error;\n    }\n  }\n\n  @Post('sign-in')\n  @HttpCode(HttpStatus.OK)\n  async signIn(\n    @Body() signInRequest: SignInRequestDto\n  ): Promise<TokenResponse & SignUpResponse> {\n    const token = await this.authService.signIn(signInRequest);\n    const user = this.authService.currentUser();\n    return { ...token, ...user };\n  }\n}\n","export class UnauthenticatedUserError extends Error {\n  constructor() {\n    super('Unauthenticated');\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PrismaModule } from '../prisma';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { JwtStrategy } from './strategies';\n\n@Module({\n  imports: [PrismaModule, JwtModule.register({})],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n","import {\n  SignUpRequest,\n  SignUpResponse,\n  TokenResponse,\n} from '@my-workspace/api-interfaces';\nimport { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\n\nimport * as argon from 'argon2';\nimport { PrismaService } from '../prisma';\nimport { SignInRequestDto } from './dtos/sign-in.dto';\nimport { eAuthMessage } from './models/auth.enum';\n\n@Injectable()\nexport class AuthService {\n  responseUser: SignUpResponse;\n  constructor(\n    private readonly prismaService: PrismaService,\n    private readonly jwtService: JwtService\n  ) {}\n\n  async signIn(userRequest: SignInRequestDto): Promise<TokenResponse> {\n    const user = await this.prismaService.user.findUnique({\n      where: {\n        email: userRequest.email,\n      },\n    });\n\n    if (!user)\n      throw new HttpException(\n        eAuthMessage.INVALID_CREDENTIALS,\n        HttpStatus.UNAUTHORIZED\n      );\n\n    const passwordMatches = await argon.verify(\n      user.password,\n      userRequest.password\n    );\n    if (!passwordMatches)\n      throw new HttpException(\n        eAuthMessage.INVALID_CREDENTIALS,\n        HttpStatus.UNAUTHORIZED\n      );\n\n    const responseUser: SignUpResponse = {\n      userID: user.userID,\n      name: user.name,\n      email: user.email,\n    };\n\n    this.responseUser = responseUser;\n\n    const token = await this.generateToken(responseUser);\n    return token;\n  }\n\n  currentUser(): SignUpResponse {\n    return this.responseUser;\n  }\n\n  async signUp(userRequest: SignUpRequest): Promise<TokenResponse> {\n    const user = await this.createUser(userRequest);\n    const token = await this.generateToken(user);\n    return token;\n  }\n\n  async createUser(userRequest: SignUpRequest): Promise<{\n    name: string;\n    email: string;\n    userID: number;\n  }> {\n    const passwordHash = await argon.hash(userRequest.password);\n\n    const user = await this.prismaService.user.create({\n      data: {\n        name: userRequest.name,\n        email: userRequest.email,\n        password: passwordHash,\n      },\n      select: {\n        userID: true,\n        email: true,\n        name: true,\n      },\n    });\n    this.responseUser = user;\n\n    return user;\n  }\n\n  private async generateToken(user: SignUpResponse): Promise<TokenResponse> {\n    const payload = {\n      userID: user.userID,\n      email: user.email,\n      name: user.name,\n    };\n\n    const token = await this.jwtService.signAsync(payload, {\n      expiresIn: '1h',\n      secret: process.env.JWT_SECRET,\n    });\n\n    return { accessToken: token };\n  }\n}\n","export * from './sign-in.dto';\nexport * from './sign-up.dto';\n","import { SignInRequest } from '@my-workspace/api-interfaces';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, MinLength } from 'class-validator';\n\nexport class SignInRequestDto implements SignInRequest {\n  @ApiProperty({\n    description: 'O email do usuário',\n    default: 'joaovitorsw@teste.com',\n  })\n  @IsString()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    description: 'A senha do usuário',\n    default: '123456',\n  })\n  @IsString()\n  @MinLength(6)\n  password: string;\n}\n","import { SignUpRequest } from '@my-workspace/api-interfaces';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsString, MinLength } from 'class-validator';\n\nexport class SignUpRequestDto implements SignUpRequest {\n  @ApiProperty({\n    description: 'O nome do usuário a ser criado',\n    default: 'João Vitor',\n  })\n  @IsString()\n  @MinLength(3)\n  name: string;\n\n  @ApiProperty({\n    description: 'O email do usuário a ser criado',\n    default: 'joaovitorsw@teste.com',\n  })\n  @IsEmail()\n  email: string;\n\n  @ApiProperty({\n    description: 'A senha do usuário a ser criada',\n    default: '123456',\n  })\n  @IsString()\n  @MinLength(6)\n  password: string;\n}\n","export * from './jwt.guard';\n","import { AuthGuard } from '@nestjs/passport';\n\nexport class JwtGuard extends AuthGuard('jwt') {\n  constructor() {\n    super();\n  }\n}\n","export * from './auth.controller';\nexport * from './auth.error';\nexport * from './guards';\nexport * from './dtos';\nexport * from './strategies';\nexport * from './auth.module';\nexport * from './auth.service';\nexport * from './strategies';\n","export const enum eAuthMessage {\n  INVALID_CREDENTIALS = 'Usuário ou senha inválidos',\n  EMAIL_ALREADY_EXISTS = 'Email já cadastrado',\n}\n","export * from './jwt.strategy';\n","import { UserAuthPayload } from '@my-workspace/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from '../../prisma';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy, 'jwt') {\n  constructor(private readonly prismaService: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: UserAuthPayload): Promise<UserAuthPayload> {\n    const user = await this.prismaService.user.findUnique({\n      where: {\n        userID: payload.userID,\n      },\n    });\n\n    return {\n      userID: user.userID,\n      username: user.name,\n      email: user.email,\n    };\n  }\n}\n","export * from './prisma.module';\r\nexport * from './prisma.service';\r\n","import { Global, Module } from '@nestjs/common';\r\n\r\nimport { PrismaService } from './prisma.service';\r\n\r\n@Global()\r\n@Module({\r\n  providers: [PrismaService],\r\n  exports: [PrismaService],\r\n})\r\nexport class PrismaModule {}\r\n","import { Injectable, OnModuleDestroy, OnModuleInit } from '@nestjs/common';\r\n\r\nimport { PrismaClient } from '@prisma/client';\r\n\r\n@Injectable()\r\nexport class PrismaService\r\n  extends PrismaClient\r\n  implements OnModuleInit, OnModuleDestroy\r\n{\r\n  constructor() {\r\n    super({\r\n      datasources: {\r\n        db: {\r\n          url: process.env.DATABASE_URL,\r\n        },\r\n      },\r\n    });\r\n  }\r\n\r\n  async onModuleInit(): Promise<void> {\r\n    await this.$connect();\r\n  }\r\n\r\n  async onModuleDestroy(): Promise<void> {\r\n    return this.$disconnect();\r\n  }\r\n\r\n  async cleanDataBase(): Promise<unknown[]> {\r\n    if (process.env.NODE_ENV === 'production') return;\r\n\r\n    const models = Reflect.ownKeys(this).filter((key) => key[0] !== '_');\r\n    return Promise.all(\r\n      models.map((modelKey) => this[modelKey as string].deleteMany())\r\n    );\r\n  }\r\n}\r\n","import { VehicleRequest, VehicleResponse } from '@my-workspace/api-interfaces';\r\nimport { ApiProperty } from '@nestjs/swagger';\r\nimport { IsNumber, IsString, MaxLength, MinLength } from 'class-validator';\r\n\r\nexport class VehicleRequestDto implements VehicleRequest {\r\n  @ApiProperty({\r\n    example: 'OAX-5895',\r\n    description: 'Essa é a placa do veículo',\r\n  })\r\n  @IsString()\r\n  board: string;\r\n\r\n  @ApiProperty({\r\n    example: '776046489',\r\n    description: 'Esse é o chassi do veículo',\r\n  })\r\n  @IsString()\r\n  chassi: string;\r\n\r\n  @ApiProperty({\r\n    example: '9BD15822AC6650210',\r\n    description: 'Esse é o Registro Nacional de um Veículo',\r\n  })\r\n  @IsString()\r\n  renavam: string;\r\n\r\n  @ApiProperty({\r\n    example: 'Automóvel Branco',\r\n    description: 'Esse é o modelo do veículo',\r\n  })\r\n  @IsString()\r\n  modelo: string;\r\n\r\n  @ApiProperty({\r\n    example: 'Fiat Uno Mille Ec.',\r\n    description: 'Esse é a marca do veículo',\r\n  })\r\n  @IsString()\r\n  marca: string;\r\n\r\n  @ApiProperty({\r\n    example: '2011',\r\n    description: 'Esse o ano de fabricação do veículo',\r\n  })\r\n  @MinLength(4)\r\n  @MaxLength(4)\r\n  @IsString()\r\n  ano: string;\r\n}\r\nexport class VehicleResponseDto implements VehicleResponse {\r\n  @ApiProperty({\r\n    example: 1,\r\n    description:\r\n      'Esse é  o identificador único de um veículo no banco de dados',\r\n  })\r\n  @IsNumber()\r\n  vehicleID: number;\r\n\r\n  @ApiProperty({\r\n    example: 'OAX-5895',\r\n    description: 'Esse é a placa do veículo',\r\n  })\r\n  @IsString()\r\n  board: string;\r\n\r\n  @ApiProperty({\r\n    example: '9BD15822AC6650210',\r\n    description: 'Esse é o chassi do veículo',\r\n  })\r\n  @IsString()\r\n  chassi: string;\r\n\r\n  @ApiProperty({\r\n    example: '776046489',\r\n    description: 'Esse é o Registro Nacional de um Veículo',\r\n  })\r\n  @IsString()\r\n  renavam: string;\r\n\r\n  @ApiProperty({\r\n    example: 'Automóvel Branco',\r\n    description: 'Esse é o modelo do veículo',\r\n  })\r\n  @IsString()\r\n  modelo: string;\r\n\r\n  @ApiProperty({\r\n    example: 'Fiat Uno Mille Ec.',\r\n    description: 'Essa é a marca do veículo',\r\n  })\r\n  @IsString()\r\n  marca: string;\r\n\r\n  @ApiProperty({\r\n    example: '2011',\r\n    description: 'Esse é a o ano de fabricação do veículo',\r\n  })\r\n  @MinLength(4)\r\n  @MaxLength(6)\r\n  @IsString()\r\n  ano: string;\r\n}\r\n","import { VehicleResponse } from '@my-workspace/api-interfaces';\nimport { Injectable } from '@nestjs/common';\nimport { PrismaService } from '../../prisma';\nimport { VehicleRequestDto } from '../dto/vehicle-create.dto';\nimport { IVehicleService } from '../models/vehicle.service.interface';\n\n@Injectable()\nexport class VehicleService implements IVehicleService {\n  constructor(readonly prismaService: PrismaService) {}\n  async create(vehicleRequest: VehicleRequestDto): Promise<VehicleResponse> {\n    const vehicleCreate = await this.prismaService.vehicle.create({\n      data: {\n        board: vehicleRequest.board,\n        chassi: vehicleRequest.chassi,\n        renavam: vehicleRequest.renavam,\n        modelo: vehicleRequest.modelo,\n        marca: vehicleRequest.marca,\n        ano: vehicleRequest.ano,\n        createdAt: new Date(),\n      },\n    });\n\n    const vehicleResponse: VehicleResponse =\n      this.createVehicleResponse(vehicleCreate);\n    return vehicleResponse;\n  }\n  async findAll(): Promise<VehicleResponse[]> {\n    const vehicles = await this.prismaService.vehicle.findMany();\n    const vehiclesResponse: VehicleResponse[] = vehicles.map((vehicle) =>\n      this.createVehicleResponse(vehicle)\n    );\n    return vehiclesResponse;\n  }\n  async findOne(vehicleID: number): Promise<VehicleResponse> {\n    const vehicle = await this.prismaService.vehicle.findUnique({\n      where: { vehicleID },\n    });\n\n    const vehicleResponse: VehicleResponse =\n      this.createVehicleResponse(vehicle);\n\n    return vehicleResponse;\n  }\n\n  async update(vehicleRequest: VehicleResponse): Promise<VehicleResponse> {\n    const vehicleID = vehicleRequest.vehicleID;\n    const updateVehicle = await this.prismaService.vehicle.update({\n      where: { vehicleID },\n      data: {\n        board: vehicleRequest.board,\n        chassi: vehicleRequest.chassi,\n        renavam: vehicleRequest.renavam,\n        modelo: vehicleRequest.modelo,\n        marca: vehicleRequest.marca,\n        ano: vehicleRequest.ano,\n      },\n    });\n    const vehicleResponse: VehicleResponse =\n      this.createVehicleResponse(updateVehicle);\n\n    return vehicleResponse;\n  }\n  async delete(vehicleID: number): Promise<boolean> {\n    await this.prismaService.vehicle.delete({\n      where: { vehicleID },\n    });\n\n    return true;\n  }\n\n  private createVehicleResponse(vehicle): VehicleResponse {\n    return {\n      vehicleID: vehicle.vehicleID,\n      board: vehicle.board,\n      chassi: vehicle.chassi,\n      renavam: vehicle.renavam,\n      modelo: vehicle.modelo,\n      marca: vehicle.marca,\n      ano: vehicle.ano,\n    };\n  }\n}\n","import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpStatus,\n  Param,\n  Post,\n  Put,\n  UseGuards,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiBody, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { UnauthenticatedUserResponseDto } from '../../shared/models/unauthenticated-user.dto';\nimport { JwtGuard } from '../auth';\nimport {\n  VehicleRequestDto,\n  VehicleResponseDto,\n} from './dto/vehicle-create.dto';\nimport { VehicleService } from './service/vehicle.service';\n\n@UseGuards(JwtGuard)\n@ApiBearerAuth('JWT-auth')\n@ApiTags('Veiculo')\n@Controller('vehicle')\n@ApiResponse({\n  status: HttpStatus.UNAUTHORIZED,\n  type: UnauthenticatedUserResponseDto,\n})\nexport class VehicleController {\n  constructor(readonly vehicleService: VehicleService) {}\n\n  @Get()\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: [VehicleResponseDto],\n  })\n  getAllVehicle() {\n    return this.vehicleService.findAll();\n  }\n\n  @Get(':vehicleID')\n  @ApiResponse({\n    status: HttpStatus.OK,\n    type: VehicleResponseDto,\n  })\n  getVehicleById(@Param('vehicleID') vehicleID: number) {\n    return this.vehicleService.findOne(vehicleID);\n  }\n\n  @Post()\n  @ApiBody({ type: VehicleRequestDto })\n  @ApiResponse({ type: VehicleResponseDto })\n  createVehicle(@Body() vehicleRequestDto: VehicleRequestDto) {\n    return this.vehicleService.create(vehicleRequestDto);\n  }\n\n  @Put()\n  @ApiBody({ type: VehicleResponseDto })\n  @ApiResponse({ type: VehicleResponseDto })\n  updateVehicle(@Body() vehicleRequestDto: VehicleResponseDto) {\n    return this.vehicleService.update(vehicleRequestDto);\n  }\n\n  @Delete(':vehicleID')\n  @ApiResponse({ type: Boolean })\n  deleteVehicle(@Param('vehicleID') vehicleID: number) {\n    return this.vehicleService.delete(vehicleID);\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { VehicleService } from './service/vehicle.service';\nimport { VehicleController } from './vehicle.controller';\n\n@Module({\n  imports: [],\n  controllers: [VehicleController],\n  providers: [\n    {\n      provide: VehicleService,\n      useClass: VehicleService,\n    },\n  ],\n})\nexport class VehicleModule {}\n","import { ApiProperty } from '@nestjs/swagger';\n\nexport class UnauthenticatedUserResponseDto {\n  @ApiProperty({\n    default: '401',\n  })\n  status: number;\n  @ApiProperty({\n    default: 'Unauthenticated',\n  })\n  message: string;\n}\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/swagger\");","module.exports = require(\"@prisma/client\");","module.exports = require(\"@prisma/client/runtime\");","module.exports = require(\"argon2\");","module.exports = require(\"class-validator\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"tslib\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { Logger, ValidationPipe } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\nimport { AppModule } from './app.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule, { cors: true });\n  const globalPrefix = 'api';\n  app.setGlobalPrefix(globalPrefix);\n\n  app.useGlobalPipes(\n    new ValidationPipe({\n      whitelist: true,\n      forbidNonWhitelisted: true,\n      transform: true,\n    })\n  );\n\n  const config = new DocumentBuilder()\n    .setTitle('Vehicle Info API')\n    .setDescription(\n      'Api feita para criação,leitura,atualização e remoção de veículos com autenticação JWT'\n    )\n    .setVersion('1.0')\n    .addBearerAuth(\n      {\n        type: 'http',\n        scheme: 'bearer',\n        bearerFormat: 'JWT',\n        name: 'JWT',\n        description: 'Enter JWT token',\n        in: 'header',\n      },\n      'JWT-auth'\n    )\n    .build();\n\n  app.enableCors();\n  const document = SwaggerModule.createDocument(app, config);\n  SwaggerModule.setup('api', app, document);\n  const port = process.env.PORT || 5000;\n  await app.listen(port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}